Enunciado ejercicio Concesionario
---------------------------------

Version 1:
----------

Aplicacion de concesionario de coches, con arquitectura monolitica, 1 aplicacion.

La aplicacion tendra acceso restringido por HTTPS. (opcional)

El acceso a las funcionalidades se hara desde un menu de una pagina principal, a donde se llegara previo login, 
dejando ver unicamente los accesos a las funcionalides a las que el usuario puede acceder segun su perfil.

La aplicacion debe permitir

- CRUD comerciales (Perfil Gerente).
- CRUD clientes (Perfil Comercial).
- CRUD vehiculos (Perfil Administrativo).

- Gestion de pedidos (Perfil Comercial).
-- Lanzar un nuevo pedido. conocidos el cliente, el comercial y el vehiculo a pedir, 
	se cosulta el stock, si hay stock se registra en la BBDD un nuevo Pedido con estado en proceso
	si no hay stock, se registra en la BBDD un nuevo Pedido con estado en sin stock y se envia un evento 
	al bus que escuchará la fabrica para producir el vehiculo.

-- Seguimiento del pedido de un cliente (comprobacion de estado). Consulta por Identificador del Pedido, que como proyeccion nos de el estado.


- Gestion de pedidos (Perfil stock)
-- Recepcion de pedido cambiando su estado a "listo para entregar" y creacion de entidad factura con estado no cobrada. (Envio de correo al cliente o al comercial)

- Gestion de facturas (Perfil Administrativo).
-- Cobro del pedido, generacion impresa de la factura y entrega de pedido. Cambio de estados de las entidades.

**** CRUD = Alta, Baja, Modificacion, ConsultaPorId y ConsultarTodos.

ClienteDto y ComercialDto, tienen todos los campos en comun, luego lo normal seria crear una clase superior que abosorbiese esos campos 
comunes y que ClienteDto y ComercialDto extendiesen esa clase

---------------
Modelo de datos
---------------

Cliente
- id
- nombre
- telefono
- correo
- pedidos

Vehiculo
- id
- descripcion
- modelo
- color
- motor
- precio

Pedido
- id
- cliente
- comercial
- vehiculo
- fecha
- estado (en proceso, entregado, sin stock, listo para entregar)
- factura

Factura
- id
- fecha
- total
- pedido
- estado (pendiente de cobro, cobrada)

Comercial
- id
- nombre
- correo
- telefono
- clientes
- pedidos





Version 2:
----------

Aplicar arquitectura de microservicios, compuesta por al menos 5 aplicaciones:

* Front Spring MVC.
* APIs REST pedidos, comerciales, clientes y vehiculos.


Version 3:
----------

Aplicar CQRS en los crud, esto será tener los comando (Alta, baja, modificacion) bajo Mysql y las consultas bajo MongoDb, la comunicacion la hariamos con Bus AMQP.
